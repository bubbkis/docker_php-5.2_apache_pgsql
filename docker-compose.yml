version: '3'

networks:
  frontend:
    driver: ${NETWORKS_DRIVER}
  backend:
    driver: ${NETWORKS_DRIVER}

volumes:
  postgres:
    driver: ${VOLUMES_DRIVER}

services:

### Apache Server ########################################
  apache2:
    build: ./
    ports:
      - "${APACHE_HOST_HTTP_PORT}:80"
      - "${APACHE_HOST_HTTPS_PORT}:443"
      - "${SSH_PORT}:22"
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
    working_dir: /var/www/html
    networks:
      - frontend
      - backend

### PostgreSQL ###########################################
  postgres:
    build: ./postgres
#    restart: always
    volumes:
      - ${DATA_PATH_HOST}/postgres:/var/lib/postgresql/data
      - "./postgres/sql:/docker-entrypoint-initdb.d"
    ports:
      - "${POSTGRES_PORT}:5432"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
#    command: /bin/bash -c "chmod -R 777 /var/lib/postgresql/data"
    networks:
      - backend

### pgAdmin ##############################################
  pgadmin:
    build: ./pgadmin
    ports:
      - "5050:5050"
    volumes:
      - ${DATA_PATH_HOST}/pgadmin-backup:/var/lib/pgadmin/storage/pgadmin4
    depends_on:
      - postgres
    networks:
      - frontend
      - backend
